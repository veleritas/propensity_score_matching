Timer unit: 1e-06 s

Total time: 21.5577 s
File: <ipython-input-6-9a7971100184>
Function: match_pairs at line 1

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     1                                           def match_pairs(people, caliper=0.05):
     2                                               
     3         1          3.0      3.0      0.0      PRECISION = 1000000
     4         1          6.0      6.0      0.0      MAX_DIST = int(caliper * PRECISION)
     5                                               
     6         1          4.0      4.0      0.0      scores = people.assign(
     7         1      25834.0  25834.0      0.1          prop_score = lambda df: np.floor(df["pred_prob"].mul(PRECISION)).astype(int)
     8                                               )
     9                                               
    10         1      62403.0  62403.0      0.3      neg_ppl = scores.query("used_drug == 0")
    11                                               
    12         1     539128.0 539128.0      2.5      neg_scores = SortedList(neg_ppl["prop_score"])
    13                                               
    14         1          6.0      6.0      0.0      matched_scores = []
    15         1      14842.0  14842.0      0.1      pos_ppl = scores.query("used_drug == 1")
    16    250001     718059.0      2.9      3.3      for row in pos_ppl.itertuples():
    17    250000     205305.0      0.8      1.0          target = row.prop_score
    18                                                   
    19    250000    2561887.0     10.2     11.9          idx = neg_scores.bisect_left(target)
    20                                                   
    21    250000     318938.0      1.3      1.5          if idx == len(neg_scores):
    22     40482      32710.0      0.8      0.2              idx -= 1
    23                                                       
    24    250000     190083.0      0.8      0.9          if idx == -1:
    25                                                       break
    26                                                       
    27    250000    4474996.0     17.9     20.8          closest_val = neg_scores[idx]
    28                                                   
    29    250000     199148.0      0.8      0.9          if idx > 0:
    30    250000    4314829.0     17.3     20.0              prev_val = neg_scores[idx - 1]
    31                                                       
    32    250000     251182.0      1.0      1.2              if abs(target - prev_val) < abs(target - closest_val):
    33     40224      29541.0      0.7      0.1                  closest_val = prev_val
    34                                                           
    35    250000     210505.0      0.8      1.0          if abs(target - closest_val) > MAX_DIST:
    36     27662      19537.0      0.7      0.1              continue
    37                                                       
    38    222338    3257469.0     14.7     15.1          neg_scores.remove(closest_val)
    39                                                   
    40    222338     222491.0      1.0      1.0          matched_scores.append((row.MMI_ID, closest_val))
    41                                                   
    42         1          2.0      2.0      0.0      neg_ppl_list = defaultdict(list)
    43    750001    2007753.0      2.7      9.3      for row in neg_ppl.itertuples():
    44    750000    1011093.0      1.3      4.7          neg_ppl_list[row.prop_score].append(row.MMI_ID)
    45                                                   
    46         1          2.0      2.0      0.0      matched_pairs = []
    47    222339     244638.0      1.1      1.1      for pos_person, pscore in matched_scores:
    48    222338     311369.0      1.4      1.4          neg_person = neg_ppl_list[pscore].pop()
    49                                                   
    50    222338     204593.0      0.9      0.9          matched_pairs.append((pos_person, neg_person))
    51                                                   
    52         1          3.0      3.0      0.0      final = pd.DataFrame(
    53         1     129364.0 129364.0      0.6          matched_pairs, columns=["MMI_ID", "matched_person"]
    54                                               )
    55                                               
    56         1          2.0      2.0      0.0      return final