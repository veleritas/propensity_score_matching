Timer unit: 1e-06 s

Total time: 21.0744 s
File: <ipython-input-9-9d084f607651>
Function: match_pairs_dev2 at line 3

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     3                                           def match_pairs_dev2(people, caliper=0.05):
     4                                               
     5         1          3.0      3.0      0.0      PRECISION = 1000000
     6         1          4.0      4.0      0.0      MAX_DIST = int(caliper * PRECISION)
     7                                               
     8         1          7.0      7.0      0.0      scores = people.assign(
     9         1      22389.0  22389.0      0.1          prop_score = lambda df: np.floor(df["pred_prob"].mul(PRECISION)).astype(np.uint32)
    10                                               )
    11                                               
    12         1      47087.0  47087.0      0.2      neg_ppl = scores.query("used_drug == 0")
    13                                               
    14         1     541142.0 541142.0      2.6      neg_scores = SortedList(neg_ppl["prop_score"])
    15                                               
    16         1          3.0      3.0      0.0      matched_scores = []
    17         1      15459.0  15459.0      0.1      pos_ppl = scores.query("used_drug == 1")
    18    250001     691582.0      2.8      3.3      for row in pos_ppl.itertuples():
    19    250000     198900.0      0.8      0.9          target = row.prop_score
    20                                                   
    21    250000    2511084.0     10.0     11.9          idx = neg_scores.bisect_left(target)
    22                                                   
    23    250000     305782.0      1.2      1.5          if idx == len(neg_scores):
    24     40482      31423.0      0.8      0.1              idx -= 1
    25                                                       
    26    250000     187539.0      0.8      0.9          if idx == -1:
    27                                                       break
    28                                                       
    29    250000    4375469.0     17.5     20.8          closest_val = neg_scores[idx]
    30                                                   
    31    250000     195562.0      0.8      0.9          if idx > 0:
    32    250000    4231762.0     16.9     20.1              prev_val = neg_scores[idx - 1]
    33                                                       
    34    250000     245544.0      1.0      1.2              if abs(target - prev_val) < abs(target - closest_val):
    35     40224      28925.0      0.7      0.1                  closest_val = prev_val
    36                                                           
    37    250000     207217.0      0.8      1.0          if abs(target - closest_val) > MAX_DIST:
    38     27662      19043.0      0.7      0.1              continue
    39                                                       
    40    222338    3215970.0     14.5     15.3          neg_scores.remove(closest_val)
    41                                                   
    42    222338     211497.0      1.0      1.0          matched_scores.append((row.MMI_ID, closest_val))
    43                                                   
    44         1          2.0      2.0      0.0      neg_ppl_list = defaultdict(list)
    45    750001    1905744.0      2.5      9.0      for row in neg_ppl.itertuples():
    46    750000     994320.0      1.3      4.7          neg_ppl_list[row.prop_score].append(row.MMI_ID)
    47                                                   
    48         1          1.0      1.0      0.0      matched_pairs = []
    49    222339     249172.0      1.1      1.2      for pos_person, pscore in matched_scores:
    50    222338     310714.0      1.4      1.5          neg_person = neg_ppl_list[pscore].pop()
    51                                                   
    52    222338     203524.0      0.9      1.0          matched_pairs.append((pos_person, neg_person))
    53                                                   
    54         1          2.0      2.0      0.0      final = pd.DataFrame(
    55         1     127550.0 127550.0      0.6          matched_pairs, columns=["MMI_ID", "matched_person"]
    56                                               )
    57                                               
    58         1          2.0      2.0      0.0      return final